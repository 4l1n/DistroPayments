{"ast":null,"code":"$(document).on(\"turbolinks:load\", function () {\n  var counter = 0;\n  var currentTab = 0; // Current tab is set to be the first tab (0)\n\n  showTab(currentTab); // Display the current tab\n\n  function showTab(n) {\n    // This function will display the specified tab of the form...\n    var x = document.getElementsByClassName(\"tab\");\n    x[n].style.display = \"block\"; //... and fix the Previous/Next buttons:\n\n    if (n == 0) {\n      document.getElementById(\"prevBtn\").style.display = \"none\";\n    } else {\n      document.getElementById(\"prevBtn\").style.display = \"inline\";\n    }\n\n    if (n == x.length - 1) {\n      document.getElementById(\"nextBtn\").style.display = \"none\";\n      document.getElementById(\"btn-sumb\").style.display = \"inline\";\n    } else {\n      document.getElementById(\"nextBtn\").style.display = \"inline\";\n      document.getElementById(\"nextBtn\").innerHTML = \"Next\";\n      document.getElementById(\"btn-sumb\").style.display = \"none\";\n    } //... and run a function that will display the correct step indicator:\n\n\n    fixStepIndicator(n);\n  }\n\n  function nextPrev(n) {\n    if (n == 1) {\n      counter++;\n    } else {\n      counter--;\n    } // This function will figure out which tab to display\n\n\n    var x = document.getElementsByClassName(\"tab\"); // Exit the function if any field in the current tab is invalid:\n\n    if (n == 1 && !validateForm()) return false; // Hide the current tab:\n    // if (counter <3)\n\n    x[currentTab].style.display = \"none\"; //  document.getElementById(\"nextBtn\")\n    // Increase or decrease the current tab by 1:\n\n    currentTab = currentTab + n;\n    showTab(currentTab);\n  }\n\n  function validateForm() {\n    // This function deals with validation of the form fields\n    var x,\n        y,\n        i,\n        valid = true;\n    x = document.getElementsByClassName(\"tab\"); //y = x[currentTab].getElementsByTagName(\"input\");\n    // A loop that checks every input field in the current tab:\n\n    /* for (i = 0; i < y.length; i++) {\n       // If a field is empty...\n       if (y[i].value == \"\") {\n         // add an \"invalid\" class to the field:\n         y[i].className += \" invalid\";\n         // and set the current valid status to false\n         valid = false;\n       }\n     }*/\n    // If the valid status is true, mark the step as finished and valid:\n\n    /*if (valid) {\n     document.getElementsByClassName(\"step\")[currentTab].className += \" finish\";\n    }*/\n\n    return valid; // return the valid status\n  }\n\n  function fixStepIndicator(n) {\n    // This function removes the \"active\" class of all steps...\n    var i,\n        x = document.getElementsByClassName(\"step\");\n\n    for (i = 0; i < x.length; i++) {\n      x[i].className = x[i].className.replace(\" active\", \"\");\n    } //... and adds the \"active\" class on the current step:\n\n\n    x[n].className += \" active\";\n  }\n});","map":{"version":3,"sources":["/home/brainarcs/projects/cardless/app/javascript/src/sign_up.js"],"names":["$","document","on","counter","currentTab","showTab","n","x","getElementsByClassName","style","display","getElementById","length","innerHTML","fixStepIndicator","nextPrev","validateForm","y","i","valid","className","replace"],"mappings":"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","sourcesContent":["$(document).on(\"turbolinks:load\", function() {\nvar counter = 0;\nvar currentTab = 0; // Current tab is set to be the first tab (0)\n    showTab(currentTab); // Display the current tab\n\n    function showTab(n) {\n      // This function will display the specified tab of the form...\n      var x = document.getElementsByClassName(\"tab\");\n      x[n].style.display = \"block\";\n      //... and fix the Previous/Next buttons:\n      if (n == 0) {\n        document.getElementById(\"prevBtn\").style.display = \"none\";\n      } else {\n        document.getElementById(\"prevBtn\").style.display = \"inline\";\n      }\n\n      if (n == (x.length - 1) ) {\n        document.getElementById(\"nextBtn\").style.display = \"none\";\n        document.getElementById(\"btn-sumb\").style.display = \"inline\";\n      } else {\n        document.getElementById(\"nextBtn\").style.display = \"inline\";\n\n        document.getElementById(\"nextBtn\").innerHTML = \"Next\";\n        document.getElementById(\"btn-sumb\").style.display = \"none\";\n\n      }\n\n\n      //... and run a function that will display the correct step indicator:\n      fixStepIndicator(n)\n    }\n    function nextPrev(n) {\n      if (n==1)\n      {\n        counter ++;\n      }\n       else\n       {\n         counter --;\n       }\n\n\n      // This function will figure out which tab to display\n      var x = document.getElementsByClassName(\"tab\");\n      // Exit the function if any field in the current tab is invalid:\n      if (n == 1 && !validateForm()) return false;\n      // Hide the current tab:\n      // if (counter <3)\n      x[currentTab].style.display = \"none\";\n      //  document.getElementById(\"nextBtn\")\n\n      // Increase or decrease the current tab by 1:\n      currentTab = currentTab + n;\n      showTab(currentTab);\n    }\n\n    function validateForm() {\n      // This function deals with validation of the form fields\n     var x, y, i, valid = true;\n      x = document.getElementsByClassName(\"tab\");\n      //y = x[currentTab].getElementsByTagName(\"input\");\n      // A loop that checks every input field in the current tab:\n     /* for (i = 0; i < y.length; i++) {\n        // If a field is empty...\n        if (y[i].value == \"\") {\n          // add an \"invalid\" class to the field:\n          y[i].className += \" invalid\";\n          // and set the current valid status to false\n          valid = false;\n        }\n      }*/\n      // If the valid status is true, mark the step as finished and valid:\n       /*if (valid) {\n        document.getElementsByClassName(\"step\")[currentTab].className += \" finish\";\n      }*/\n      return valid; // return the valid status\n    }\n\n    function fixStepIndicator(n) {\n      // This function removes the \"active\" class of all steps...\n      var i, x = document.getElementsByClassName(\"step\");\n      for (i = 0; i < x.length; i++) {\n        x[i].className = x[i].className.replace(\" active\", \"\");\n      }\n      //... and adds the \"active\" class on the current step:\n      x[n].className += \" active\";\n    }\n})\n"]},"metadata":{},"sourceType":"module"}